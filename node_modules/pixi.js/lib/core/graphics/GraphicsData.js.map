{"version":3,"sources":["../../../src/core/graphics/GraphicsData.js"],"names":["GraphicsData","lineWidth","lineColor","lineAlpha","fillColor","fillAlpha","fill","nativeLines","shape","_lineTint","_fillTint","holes","type","clone","addHole","push","destroy"],"mappings":";;;;;;AAAA;;;;;;IAMqBA,Y;AAEjB;;;;;;;;;;;AAWA,wBAAYC,SAAZ,EAAuBC,SAAvB,EAAkCC,SAAlC,EAA6CC,SAA7C,EAAwDC,SAAxD,EAAmEC,IAAnE,EAAyEC,WAAzE,EAAsFC,KAAtF,EACA;AAAA;;AACI;;;AAGA,SAAKP,SAAL,GAAiBA,SAAjB;AACA;;;AAGA,SAAKM,WAAL,GAAmBA,WAAnB;;AAEA;;;AAGA,SAAKL,SAAL,GAAiBA,SAAjB;;AAEA;;;AAGA,SAAKC,SAAL,GAAiBA,SAAjB;;AAEA;;;AAGA,SAAKM,SAAL,GAAiBP,SAAjB;;AAEA;;;AAGA,SAAKE,SAAL,GAAiBA,SAAjB;;AAEA;;;AAGA,SAAKC,SAAL,GAAiBA,SAAjB;;AAEA;;;AAGA,SAAKK,SAAL,GAAiBN,SAAjB;;AAEA;;;AAGA,SAAKE,IAAL,GAAYA,IAAZ;;AAEA,SAAKK,KAAL,GAAa,EAAb;;AAEA;;;AAGA,SAAKH,KAAL,GAAaA,KAAb;;AAEA;;;AAGA,SAAKI,IAAL,GAAYJ,MAAMI,IAAlB;AACH;;AAED;;;;;;;yBAKAC,K,oBACA;AACI,WAAO,IAAIb,YAAJ,CACH,KAAKC,SADF,EAEH,KAAKC,SAFF,EAGH,KAAKC,SAHF,EAIH,KAAKC,SAJF,EAKH,KAAKC,SALF,EAMH,KAAKC,IANF,EAOH,KAAKC,WAPF,EAQH,KAAKC,KARF,CAAP;AAUH,G;;AAED;;;;;;;yBAKAM,O,oBAAQN,K,EACR;AACI,SAAKG,KAAL,CAAWI,IAAX,CAAgBP,KAAhB;AACH,G;;AAED;;;;;yBAGAQ,O,sBACA;AACI,SAAKR,KAAL,GAAa,IAAb;AACA,SAAKG,KAAL,GAAa,IAAb;AACH,G;;;;;kBA5GgBX,Y","file":"GraphicsData.js","sourcesContent":["/**\n * A GraphicsData object.\n *\n * @class\n * @memberof PIXI\n */\nexport default class GraphicsData\n{\n    /**\n     *\n     * @param {number} lineWidth - the width of the line to draw\n     * @param {number} lineColor - the color of the line to draw\n     * @param {number} lineAlpha - the alpha of the line to draw\n     * @param {number} fillColor - the color of the fill\n     * @param {number} fillAlpha - the alpha of the fill\n     * @param {boolean} fill - whether or not the shape is filled with a colour\n     * @param {boolean} nativeLines - the method for drawing lines\n     * @param {PIXI.Circle|PIXI.Rectangle|PIXI.Ellipse|PIXI.Polygon} shape - The shape object to draw.\n     */\n    constructor(lineWidth, lineColor, lineAlpha, fillColor, fillAlpha, fill, nativeLines, shape)\n    {\n        /**\n         * @member {number} the width of the line to draw\n         */\n        this.lineWidth = lineWidth;\n        /**\n         * @member {boolean} if true the liens will be draw using LINES instead of TRIANGLE_STRIP\n         */\n        this.nativeLines = nativeLines;\n\n        /**\n         * @member {number} the color of the line to draw\n         */\n        this.lineColor = lineColor;\n\n        /**\n         * @member {number} the alpha of the line to draw\n         */\n        this.lineAlpha = lineAlpha;\n\n        /**\n         * @member {number} cached tint of the line to draw\n         */\n        this._lineTint = lineColor;\n\n        /**\n         * @member {number} the color of the fill\n         */\n        this.fillColor = fillColor;\n\n        /**\n         * @member {number} the alpha of the fill\n         */\n        this.fillAlpha = fillAlpha;\n\n        /**\n         * @member {number} cached tint of the fill\n         */\n        this._fillTint = fillColor;\n\n        /**\n         * @member {boolean} whether or not the shape is filled with a colour\n         */\n        this.fill = fill;\n\n        this.holes = [];\n\n        /**\n         * @member {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} The shape object to draw.\n         */\n        this.shape = shape;\n\n        /**\n         * @member {number} The type of the shape, see the Const.Shapes file for all the existing types,\n         */\n        this.type = shape.type;\n    }\n\n    /**\n     * Creates a new GraphicsData object with the same values as this one.\n     *\n     * @return {PIXI.GraphicsData} Cloned GraphicsData object\n     */\n    clone()\n    {\n        return new GraphicsData(\n            this.lineWidth,\n            this.lineColor,\n            this.lineAlpha,\n            this.fillColor,\n            this.fillAlpha,\n            this.fill,\n            this.nativeLines,\n            this.shape\n        );\n    }\n\n    /**\n     * Adds a hole to the shape.\n     *\n     * @param {PIXI.Rectangle|PIXI.Circle} shape - The shape of the hole.\n     */\n    addHole(shape)\n    {\n        this.holes.push(shape);\n    }\n\n    /**\n     * Destroys the Graphics data.\n     */\n    destroy()\n    {\n        this.shape = null;\n        this.holes = null;\n    }\n}\n"]}